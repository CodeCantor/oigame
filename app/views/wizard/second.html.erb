
<% @page_title = t(:propose_campaign) %>

<div id="campaigns-wrapper">
  <div id="create-campaigns">
    <div id="create-campaign-form" class="form-stacked">
      <h2><%= @page_title %></h2>

      <%= form_for @campaign, :url => wizard_path, :method => :put do |f| %>
  <fieldset>
    <legend><%= t(:please_fill_the_form) %></legend>
    <div class="form-field">
      <%= f.label :body, t(:body_of_campaign) %>
      <div class="wmd-panel">
        <div id="wmd-button-bar-second"></div>
        <%= f.text_area :body, :class => 'wmd-input', :id => 'wmd-input-second', :rows => 10, :class => 'span6', :required => true, :placeholder => t(:body_of_campaign_help) %>
      </div>
      <a href="#" class="show_markdown_help"><%= I18n.t(:markdown_help_show) %></a>
      <div class="markdown_help" style="display:none;">
        <%= render :partial => 'campaigns/markdown_help' %>
      </div>
      <% unless @campaign.errors[:body].blank? %>
        <span class="error_message"><%= @campaign.errors[:body].to_sentence %></span>
      <% end %>
    </div>
    <div class="form-field">
      <%= f.label :category, t(:category_of_campaign) %>
      <%= collection_select(:campaign, :category_id, Category.all, :id, :name, :prompt => t(:category_of_campaign) ) %>
    </div>
    <div class="form-field">
      <%= f.label :ttype, t(:type_of_campaign) %>
      <%= select(:campaign, :ttype, Campaign::TYPES.select {|k,v| [k,v]}.invert, {:prompt => t(:type_of_campaign_prompt)}) %>
    </div>
    <div class="form-field form-campaign hide">
      <%= f.label :recipients, t(:recipients) %>
      <%= f.text_area :recipients, :rows => 10, :class => 'span6', :required => true, :placeholder => t(:recipients_help) %>
    </div>
    <div class="form-field form-campaign hide">
      <%= f.label :default_message_subject, t(:default_message_subject) %>
      <%= f.text_field :default_message_subject, :class => 'span6', :required => true, :placeholder => t(:default_message_subject) %>
    </div>
    <div class="form-field form-campaign hide">
      <%= f.label :default_message_body, t(:default_message_body) %>
      <%= f.text_area :default_message_body, :rows => 10, :class => 'span6', :required => true, :placeholder => t(:default_message_body_help) %>
    </div>
    <div class="form-field form-fax hide">
      <%= f.label :faxes_recipients, t(:faxes_recipients) %>
      <%= f.text_area :faxes_recipients, :rows => 10, :class => 'span6', :required => true, :placeholder => t(:faxes_recipients_help) %>
    </div>
    <div class="form-field form-fax hide">
      <%= f.label :default_message_body, t(:default_message_body) %>
      <%= f.text_area :default_message_body, :rows => 10, :class => 'span6', :required => true, :placeholder => t(:default_message_body_help) %>
    </div>
    <div class="form-field">
      <%= f.label :commentable, t(:enable_comments) %>
      <%= f.check_box :commentable, :checked => true %> <span class="note"><%= t(:enable_comments) %></span>
    </div>
    <div class="form-field">
      <%= f.label :target, t(:number_of_people) %>
      <%= f.text_field :target, :class => 'span6', :placeholder => t(:number_of_people) %>
    </div>
    <div class="form-field">
      <%= f.label :duedate_at, t(:due_date_of_campaign) %>
      <%= f.text_field :duedate_at, :class => "datepicker", :required => true %>
      <% unless @campaign.errors[:duedate_at].blank? %>
        <br />
        <span class="error_message"><%= @campaign.errors[:duedate_at].to_sentence %></span>
      <% end %>
    </div>
    <div id="form-actions">
      <%= link_to 'Anterior paso', previous_wizard_path, :class => 'btn btn-primary btn-large' %>
      <%= f.submit 'Crear campaÃ±a', :class => 'btn btn-primary btn-large' %>
    </div>
  </fieldset>
<% end %>



    </div><!-- create-campaign-form -->
  </div><!-- create-campaigns -->
</div><!-- campaigns-wrapper -->

<script type="text/javascript">
  (function() {
    var converter1 = Markdown.getSanitizingConverter();
    var editor1 = new Markdown.Editor(converter1);
    editor1.run();
    
    var converter2 = Markdown.getSanitizingConverter();
    var editor2 = new Markdown.Editor(converter2, "-second");
    editor2.run();
  })();
</script>

